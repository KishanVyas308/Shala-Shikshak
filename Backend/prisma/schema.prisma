// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model Standard {
  id          String    @id @default(cuid())
  name        String    @unique // e.g., "Class 1", "Class 2", etc.
  description String?
  order       Int       @unique // for ordering standards
  subjects    Subject[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("standards")
}

model Subject {
  id          String    @id @default(cuid())
  name        String    // e.g., "Mathematics", "Science", etc.
  description String?
  standardId  String
  standard    Standard  @relation(fields: [standardId], references: [id], onDelete: Cascade)
  chapters    Chapter[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([name, standardId])
  @@map("subjects")
}

model Chapter {
  id          String              @id @default(cuid())
  name        String
  description String?
  subjectId   String
  subject     Subject             @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  resources   ChapterResource[]
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt

  @@map("chapters")
}

model ChapterResource {
  id          String              @id @default(cuid())
  title       String
  description String?
  type        ChapterResourceType // svadhyay, svadhyay_pothi, other
  resourceType ResourceType       // video, pdf
  url         String              // URL for the resource
  fileName    String?             // Original filename for uploaded files
  chapterId   String
  chapter     Chapter             @relation(fields: [chapterId], references: [id], onDelete: Cascade)
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt

  @@map("chapter_resources")
}

enum ChapterResourceType {
  svadhyay
  svadhyay_pothi
  other
}

enum ResourceType {
  video
  pdf
}
